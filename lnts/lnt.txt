************* Module tabsC
tabsC.py:1:0: C0302: Too many lines in module (2793/1000) (too-many-lines)
tabsC.py:1:0: C0114: Missing module docstring (missing-module-docstring)
tabsC.py:1:0: C0410: Multiple imports on one line (glob, math, os, pathlib, sys) (multiple-imports)
tabsC.py:2:0: C0410: Multiple imports on one line (operator, inspect, itertools) (multiple-imports)
tabsC.py:7:0: C0413: Import "from collections import Counter" should be placed at the top of the module (wrong-import-position)
tabsC.py:8:0: C0413: Import "import pyglet" should be placed at the top of the module (wrong-import-position)
tabsC.py:9:0: C0413: Import "import pyglet.font as pygfont" should be placed at the top of the module (wrong-import-position)
tabsC.py:10:0: C0413: Import "import pyglet.sprite as pygsprt" should be placed at the top of the module (wrong-import-position)
tabsC.py:11:0: C0413: Import "import pyglet.text as pygtxt" should be placed at the top of the module (wrong-import-position)
tabsC.py:12:0: C0413: Import "import pyglet.window.event as pygwine" should be placed at the top of the module (wrong-import-position)
tabsC.py:13:0: C0413: Import "import pyglet.window.key as pygwink" should be placed at the top of the module (wrong-import-position)
tabsC.py:14:0: C0410: Multiple imports on one line (util, chord) (multiple-imports)
tabsC.py:14:0: C0413: Import "import util, chord" should be placed at the top of the module (wrong-import-position)
tabsC.py:14:0: C0413: Import "import util, chord" should be placed at the top of the module (wrong-import-position)
tabsC.py:16:0: C0414: Import alias does not rename original package (useless-import-alias)
tabsC.py:16:0: C0413: Import "from util import Notes as Notes" should be placed at the top of the module (wrong-import-position)
tabsC.py:17:0: C0414: Import alias does not rename original package (useless-import-alias)
tabsC.py:17:0: C0413: Import "from util import slog as slog" should be placed at the top of the module (wrong-import-position)
tabsC.py:18:0: C0414: Import alias does not rename original package (useless-import-alias)
tabsC.py:18:0: C0413: Import "from util import olog as olog" should be placed at the top of the module (wrong-import-position)
tabsC.py:19:0: C0414: Import alias does not rename original package (useless-import-alias)
tabsC.py:19:0: C0413: Import "from util import fmtl as fmtl" should be placed at the top of the module (wrong-import-position)
tabsC.py:20:0: C0414: Import alias does not rename original package (useless-import-alias)
tabsC.py:20:0: C0413: Import "from util import fmtm as fmtm" should be placed at the top of the module (wrong-import-position)
tabsC.py:30:0: W0223: Method '_create' is abstract in class 'BaseWindow' but is not overridden in child class 'Tabs' (abstract-method)
tabsC.py:30:0: W0223: Method '_recreate' is abstract in class 'BaseWindow' but is not overridden in child class 'Tabs' (abstract-method)
tabsC.py:30:0: W0223: Method 'activate' is abstract in class 'BaseWindow' but is not overridden in child class 'Tabs' (abstract-method)
tabsC.py:30:0: W0223: Method 'dispatch_events' is abstract in class 'BaseWindow' but is not overridden in child class 'Tabs' (abstract-method)
tabsC.py:30:0: W0223: Method 'flip' is abstract in class 'BaseWindow' but is not overridden in child class 'Tabs' (abstract-method)
tabsC.py:30:0: W0223: Method 'get_location' is abstract in class 'BaseWindow' but is not overridden in child class 'Tabs' (abstract-method)
tabsC.py:30:0: W0223: Method 'get_size' is abstract in class 'BaseWindow' but is not overridden in child class 'Tabs' (abstract-method)
tabsC.py:30:0: W0223: Method 'get_system_mouse_cursor' is abstract in class 'BaseWindow' but is not overridden in child class 'Tabs' (abstract-method)
tabsC.py:30:0: W0223: Method 'maximize' is abstract in class 'BaseWindow' but is not overridden in child class 'Tabs' (abstract-method)
tabsC.py:30:0: W0223: Method 'minimize' is abstract in class 'BaseWindow' but is not overridden in child class 'Tabs' (abstract-method)
tabsC.py:30:0: W0223: Method 'set_caption' is abstract in class 'BaseWindow' but is not overridden in child class 'Tabs' (abstract-method)
tabsC.py:30:0: W0223: Method 'set_exclusive_keyboard' is abstract in class 'BaseWindow' but is not overridden in child class 'Tabs' (abstract-method)
tabsC.py:30:0: W0223: Method 'set_exclusive_mouse' is abstract in class 'BaseWindow' but is not overridden in child class 'Tabs' (abstract-method)
tabsC.py:30:0: W0223: Method 'set_location' is abstract in class 'BaseWindow' but is not overridden in child class 'Tabs' (abstract-method)
tabsC.py:30:0: W0223: Method 'set_maximum_size' is abstract in class 'BaseWindow' but is not overridden in child class 'Tabs' (abstract-method)
tabsC.py:30:0: W0223: Method 'set_minimum_size' is abstract in class 'BaseWindow' but is not overridden in child class 'Tabs' (abstract-method)
tabsC.py:30:0: W0223: Method 'set_mouse_platform_visible' is abstract in class 'BaseWindow' but is not overridden in child class 'Tabs' (abstract-method)
tabsC.py:30:0: W0223: Method 'set_size' is abstract in class 'BaseWindow' but is not overridden in child class 'Tabs' (abstract-method)
tabsC.py:30:0: W0223: Method 'set_visible' is abstract in class 'BaseWindow' but is not overridden in child class 'Tabs' (abstract-method)
tabsC.py:30:0: W0223: Method 'set_vsync' is abstract in class 'BaseWindow' but is not overridden in child class 'Tabs' (abstract-method)
tabsC.py:30:0: W0223: Method 'switch_to' is abstract in class 'BaseWindow' but is not overridden in child class 'Tabs' (abstract-method)
tabsC.py:30:0: R0902: Too many instance attributes (161/7) (too-many-instance-attributes)
tabsC.py:65:31: W0125: Using a conditional statement with a constant value (using-constant-test)
tabsC.py:66:31: W0125: Using a conditional statement with a constant value (using-constant-test)
tabsC.py:32:4: R0915: Too many statements (179/50) (too-many-statements)
tabsC.py:257:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
tabsC.py:519:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tabsC.py:523:12: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
tabsC.py:540:16: W0612: Unused variable 'ns' (unused-variable)
tabsC.py:555:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
tabsC.py:548:4: R0915: Too many statements (60/50) (too-many-statements)
tabsC.py:592:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
tabsC.py:629:12: W0612: Unused variable 'p' (unused-variable)
tabsC.py:631:16: W0612: Unused variable 'l' (unused-variable)
tabsC.py:646:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
tabsC.py:664:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
tabsC.py:695:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
tabsC.py:702:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
tabsC.py:706:12: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
tabsC.py:698:12: W0612: Unused variable 'k' (unused-variable)
tabsC.py:764:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
tabsC.py:762:16: W0612: Unused variable 'ns' (unused-variable)
tabsC.py:798:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
tabsC.py:795:16: W0612: Unused variable 'ns' (unused-variable)
tabsC.py:795:24: W0612: Unused variable 'nt' (unused-variable)
tabsC.py:798:12: W0612: Unused variable 'v' (unused-variable)
tabsC.py:815:12: W0612: Unused variable 'nl' (unused-variable)
tabsC.py:815:16: W0612: Unused variable 'ns' (unused-variable)
tabsC.py:815:20: W0612: Unused variable 'nc' (unused-variable)
tabsC.py:815:24: W0612: Unused variable 'nt' (unused-variable)
tabsC.py:823:12: W0612: Unused variable 'nl' (unused-variable)
tabsC.py:823:16: W0612: Unused variable 'ns' (unused-variable)
tabsC.py:823:20: W0612: Unused variable 'nc' (unused-variable)
tabsC.py:823:24: W0612: Unused variable 'nt' (unused-variable)
tabsC.py:847:16: W0632: Possible unbalanced tuple unpacking with sequence defined at line 1024: left side has 4 labels, right side has 2 values (unbalanced-tuple-unpacking)
tabsC.py:842:8: W0612: Unused variable 'np' (unused-variable)
tabsC.py:842:24: W0612: Unused variable 'nt' (unused-variable)
tabsC.py:847:26: W0612: Unused variable 'kk' (unused-variable)
tabsC.py:847:30: W0612: Unused variable 'txt' (unused-variable)
tabsC.py:851:8: W0612: Unused variable 'np' (unused-variable)
tabsC.py:869:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
tabsC.py:902:16: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
tabsC.py:898:8: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
tabsC.py:898:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
tabsC.py:896:16: W0612: Unused variable 'ns' (unused-variable)
tabsC.py:933:8: W0612: Unused variable 'np' (unused-variable)
tabsC.py:933:16: W0612: Unused variable 'ns' (unused-variable)
tabsC.py:933:20: W0612: Unused variable 'nc' (unused-variable)
tabsC.py:945:8: W0612: Unused variable 'n' (unused-variable)
tabsC.py:945:11: W0612: Unused variable 'ii' (unused-variable)
tabsC.py:956:13: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tabsC.py:959:13: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tabsC.py:979:11: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tabsC.py:980:11: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tabsC.py:978:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
tabsC.py:1007:42: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tabsC.py:1012:36: R1714: Consider merging these comparisons with 'in' by using 'C2 in (z1, z2)'. Use a set instead if elements are hashable. (consider-using-in)
tabsC.py:1009:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
tabsC.py:1077:8: W0612: Unused variable 'nz' (unused-variable)
tabsC.py:1077:12: W0612: Unused variable 'iz' (unused-variable)
tabsC.py:1080:16: W0612: Unused variable 'iu' (unused-variable)
tabsC.py:1084:16: W0612: Unused variable 'ia' (unused-variable)
tabsC.py:1095:8: W0632: Possible unbalanced tuple unpacking with sequence defined at line 1024: left side has 4 labels, right side has 2 values (unbalanced-tuple-unpacking)
tabsC.py:1101:8: W0612: Unused variable 'nz' (unused-variable)
tabsC.py:1101:12: W0612: Unused variable 'iz' (unused-variable)
tabsC.py:1103:12: W0612: Unused variable 'iu' (unused-variable)
tabsC.py:1111:8: W0612: Unused variable 'nr' (unused-variable)
tabsC.py:1111:12: W0612: Unused variable 'ir' (unused-variable)
tabsC.py:1113:12: W0612: Unused variable 'ic' (unused-variable)
tabsC.py:1133:8: W0612: Unused variable 'nr' (unused-variable)
tabsC.py:1133:12: W0612: Unused variable 'ir' (unused-variable)
tabsC.py:1135:12: W0612: Unused variable 'ic' (unused-variable)
tabsC.py:1162:17: R1714: Consider merging these comparisons with 'in' by using 'j in (C, E)'. Use a set instead if elements are hashable. (consider-using-in)
tabsC.py:1168:20: W0632: Possible unbalanced tuple unpacking with sequence defined at line 1024: left side has 4 labels, right side has 2 values (unbalanced-tuple-unpacking)
tabsC.py:1180:11: W0612: Unused variable 'k2' (unused-variable)
tabsC.py:1206:22: W0612: Unused variable 'ml' (unused-variable)
tabsC.py:1207:22: W0612: Unused variable 'tml' (unused-variable)
tabsC.py:1233:13: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tabsC.py:1234:13: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tabsC.py:1257:17: R1714: Consider merging these comparisons with 'in' by using 'j in (C, E)'. Use a set instead if elements are hashable. (consider-using-in)
tabsC.py:1255:17: W0612: Unused variable 't' (unused-variable)
tabsC.py:1274:13: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tabsC.py:1277:13: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tabsC.py:1312:24: W0632: Possible unbalanced tuple unpacking with sequence defined at line 1024: left side has 4 labels, right side has 2 values (unbalanced-tuple-unpacking)
tabsC.py:1298:59: W0612: Unused variable 'ns' (unused-variable)
tabsC.py:1312:34: W0612: Unused variable 'kl' (unused-variable)
tabsC.py:1354:13: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tabsC.py:1354:36: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tabsC.py:1398:28: W0632: Possible unbalanced tuple unpacking with sequence defined at line 1024: left side has 4 labels, right side has 2 values (unbalanced-tuple-unpacking)
tabsC.py:1383:8: W0612: Unused variable 'tpb' (unused-variable)
tabsC.py:1383:23: W0612: Unused variable 'tps' (unused-variable)
tabsC.py:1384:16: W0612: Unused variable 'ns' (unused-variable)
tabsC.py:1398:34: W0612: Unused variable 'k' (unused-variable)
tabsC.py:1398:37: W0612: Unused variable 'txt' (unused-variable)
tabsC.py:1409:65: W0612: Unused variable 'np' (unused-variable)
tabsC.py:1409:73: W0612: Unused variable 'ns' (unused-variable)
tabsC.py:1409:81: W0612: Unused variable 'nt' (unused-variable)
tabsC.py:1471:40: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tabsC.py:1472:40: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tabsC.py:1490:20: W0612: Unused variable 's' (unused-variable)
tabsC.py:1495:20: W0612: Unused variable 'nc' (unused-variable)
tabsC.py:1495:24: W0612: Unused variable 'nt' (unused-variable)
tabsC.py:1498:23: W0612: Unused variable 's2' (unused-variable)
tabsC.py:1505:24: W0612: Unused variable 'nt' (unused-variable)
tabsC.py:1506:12: W0612: Unused variable 'p' (unused-variable)
tabsC.py:1507:16: W0612: Unused variable 'l' (unused-variable)
tabsC.py:1515:20: W0612: Unused variable 'c' (unused-variable)
tabsC.py:1522:20: W0612: Unused variable 'c' (unused-variable)
tabsC.py:1534:8: W0612: Unused variable 'tpb' (unused-variable)
tabsC.py:1534:18: W0612: Unused variable 'tpl' (unused-variable)
tabsC.py:1534:23: W0612: Unused variable 'tps' (unused-variable)
tabsC.py:1534:28: W0612: Unused variable 'tpc' (unused-variable)
tabsC.py:1546:8: W0612: Unused variable 'tpb' (unused-variable)
tabsC.py:1546:23: W0612: Unused variable 'tps' (unused-variable)
tabsC.py:1554:8: W0612: Unused variable 'tpb' (unused-variable)
tabsC.py:1567:17: W0612: Unused variable 't' (unused-variable)
tabsC.py:1572:8: W0612: Unused variable 'tpb' (unused-variable)
tabsC.py:1572:23: W0612: Unused variable 'tps' (unused-variable)
tabsC.py:1583:16: W0612: Unused variable 'ns' (unused-variable)
tabsC.py:1625:8: W0612: Unused variable 'np' (unused-variable)
tabsC.py:1625:20: W0612: Unused variable 'nc' (unused-variable)
tabsC.py:1633:8: W0612: Unused variable 'np' (unused-variable)
tabsC.py:1643:8: W0612: Unused variable 'fb' (unused-variable)
tabsC.py:1643:20: W0612: Unused variable 'fi' (unused-variable)
tabsC.py:1649:8: W0612: Unused variable 'b' (unused-variable)
tabsC.py:1649:19: W0612: Unused variable 'i' (unused-variable)
tabsC.py:1664:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
tabsC.py:1796:4: W0237: Parameter 'modifiers' has been renamed to 'mods' in overriding 'Tabs.on_mouse_release' method (arguments-renamed)
tabsC.py:1797:8: W0612: Unused variable 'np' (unused-variable)
tabsC.py:1813:4: W0237: Parameter 'symbol' has been renamed to 'symb' in overriding 'Tabs.on_key_press' method (arguments-renamed)
tabsC.py:1813:4: W0237: Parameter 'modifiers' has been renamed to 'mods' in overriding 'Tabs.on_key_press' method (arguments-renamed)
tabsC.py:1813:4: R0915: Too many statements (154/50) (too-many-statements)
tabsC.py:1907:4: W0237: Parameter 'symbol' has been renamed to 'symb' in overriding 'Tabs.on_key_release' method (arguments-renamed)
tabsC.py:1907:4: W0237: Parameter 'modifiers' has been renamed to 'mods' in overriding 'Tabs.on_key_release' method (arguments-renamed)
tabsC.py:1924:4: R0915: Too many statements (119/50) (too-many-statements)
tabsC.py:1925:32: W0612: Unused variable 'p' (unused-variable)
tabsC.py:1925:35: W0612: Unused variable 'l' (unused-variable)
tabsC.py:1925:38: W0612: Unused variable 's' (unused-variable)
tabsC.py:1925:44: W0612: Unused variable 't' (unused-variable)
tabsC.py:1925:61: W0612: Unused variable 'np' (unused-variable)
tabsC.py:1925:65: W0612: Unused variable 'nl' (unused-variable)
tabsC.py:1925:69: W0612: Unused variable 'ns' (unused-variable)
tabsC.py:2008:8: W0612: Unused variable 'np' (unused-variable)
tabsC.py:2008:16: W0612: Unused variable 'ns' (unused-variable)
tabsC.py:2008:49: W0612: Unused variable 's' (unused-variable)
tabsC.py:2018:8: W0612: Unused variable 'np' (unused-variable)
tabsC.py:2018:16: W0612: Unused variable 'ns' (unused-variable)
tabsC.py:2018:49: W0612: Unused variable 's' (unused-variable)
tabsC.py:2043:14: W0612: Unused variable 's' (unused-variable)
tabsC.py:2049:14: W0612: Unused variable 's' (unused-variable)
tabsC.py:2055:14: W0612: Unused variable 's' (unused-variable)
tabsC.py:2061:14: W0612: Unused variable 's' (unused-variable)
tabsC.py:2082:8: W0612: Unused variable 'np' (unused-variable)
tabsC.py:2082:16: W0612: Unused variable 'ns' (unused-variable)
tabsC.py:2145:34: W0612: Unused variable 'np' (unused-variable)
tabsC.py:2145:38: W0612: Unused variable 'nl' (unused-variable)
tabsC.py:2145:42: W0612: Unused variable 'ns' (unused-variable)
tabsC.py:2163:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
tabsC.py:2174:31: W0612: Unused variable 'r' (unused-variable)
tabsC.py:2181:11: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tabsC.py:2241:14: W0612: Unused variable 's' (unused-variable)
tabsC.py:2282:12: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
tabsC.py:2288:16: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
tabsC.py:2280:8: R1702: Too many nested blocks (8/5) (too-many-nested-blocks)
tabsC.py:2272:4: R0915: Too many statements (51/50) (too-many-statements)
tabsC.py:2284:20: W0612: Unused variable 'ns' (unused-variable)
tabsC.py:2314:13: R1714: Consider merging these comparisons with 'in' by using 'txt in (W, '/r')'. Use a set instead if elements are hashable. (consider-using-in)
tabsC.py:2348:50: R1733: Unnecessary dictionary index lookup, use 'v' instead (unnecessary-dict-index-lookup)
tabsC.py:2350:27: R1733: Unnecessary dictionary index lookup, use 'v' instead (unnecessary-dict-index-lookup)
tabsC.py:2347:51: W0612: Unused variable 'r' (unused-variable)
tabsC.py:2376:8: W0632: Possible unbalanced tuple unpacking with sequence defined at line 1024: left side has 4 labels, right side has 2 values (unbalanced-tuple-unpacking)
tabsC.py:2375:32: W0612: Unused variable 'np' (unused-variable)
tabsC.py:2375:36: W0612: Unused variable 'nl' (unused-variable)
tabsC.py:2375:44: W0612: Unused variable 'nc' (unused-variable)
tabsC.py:2376:15: W0612: Unused variable 'j' (unused-variable)
tabsC.py:2376:21: W0612: Unused variable 'tobj' (unused-variable)
tabsC.py:2417:12: R1704: Redefining argument with the local name 'cn' (redefined-argument-from-local)
tabsC.py:2435:17: W0612: Unused variable 't' (unused-variable)
tabsC.py:2442:15: W0612: Unused variable 'ivals' (unused-variable)
tabsC.py:2442:22: W0612: Unused variable 'notes' (unused-variable)
tabsC.py:2442:48: W0612: Unused variable 'rank' (unused-variable)
tabsC.py:2477:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
tabsC.py:2512:11: R1714: Consider merging these comparisons with 'in' by using 'self.csrMode in (MELODY, ARPG)'. Use a set instead if elements are hashable. (consider-using-in)
tabsC.py:2513:11: R1714: Consider merging these comparisons with 'in' by using 'self.csrMode in (CHORD, ARPG)'. Use a set instead if elements are hashable. (consider-using-in)
tabsC.py:2528:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
tabsC.py:2530:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
tabsC.py:2532:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
tabsC.py:2534:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
tabsC.py:2595:78: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tabsC.py:2604:25: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
tabsC.py:227:8: W0201: Attribute 'tpb' defined outside __init__ (attribute-defined-outside-init)
tabsC.py:227:18: W0201: Attribute 'tpp' defined outside __init__ (attribute-defined-outside-init)
tabsC.py:227:28: W0201: Attribute 'tpl' defined outside __init__ (attribute-defined-outside-init)
tabsC.py:227:38: W0201: Attribute 'tps' defined outside __init__ (attribute-defined-outside-init)
tabsC.py:227:48: W0201: Attribute 'tpc' defined outside __init__ (attribute-defined-outside-init)
tabsC.py:278:8: W0201: Attribute 'gn' defined outside __init__ (attribute-defined-outside-init)
tabsC.py:278:74: W0201: Attribute 'g' defined outside __init__ (attribute-defined-outside-init)
tabsC.py:287:8: W0201: Attribute 'labelTextA' defined outside __init__ (attribute-defined-outside-init)
tabsC.py:287:25: W0201: Attribute 'labelTextB' defined outside __init__ (attribute-defined-outside-init)
tabsC.py:289:8: W0201: Attribute 'llText' defined outside __init__ (attribute-defined-outside-init)
tabsC.py:294:28: W0201: Attribute 'smap' defined outside __init__ (attribute-defined-outside-init)
tabsC.py:1637:8: W0201: Attribute 'fontBold' defined outside __init__ (attribute-defined-outside-init)
tabsC.py:1637:23: W0201: Attribute 'fontItalic' defined outside __init__ (attribute-defined-outside-init)
tabsC.py:1637:40: W0201: Attribute 'clrIdx' defined outside __init__ (attribute-defined-outside-init)
tabsC.py:1637:53: W0201: Attribute 'fontDpiIndex' defined outside __init__ (attribute-defined-outside-init)
tabsC.py:1637:72: W0201: Attribute 'fontNameIdx' defined outside __init__ (attribute-defined-outside-init)
tabsC.py:1637:90: W0201: Attribute 'fontSize' defined outside __init__ (attribute-defined-outside-init)
tabsC.py:30:0: R0904: Too many public methods (290/20) (too-many-public-methods)
tabsC.py:2708:62: E1126: Sequence index is not an int, slice, or instance with __index__ (invalid-sequence-index)
tabsC.py:2711:20: R1728: Consider using a generator instead 'list(fri(rgb[i] / dv + j * steps[i]) for i in range(lrgb))' (consider-using-generator)
tabsC.py:2720:4: W0602: Using global for 'RGB' but no assignment is done (global-variable-not-assigned)
tabsC.py:2774:4: W0644: Possible unbalanced dict unpacking with initRGB(): left side has 19 labels, right side has 0 values (unbalanced-dict-unpacking)
tabsC.py:7:0: C0411: standard import "from collections import Counter" should be placed before "from more_itertools import consume" (wrong-import-order)
************* Module util
util.py:3:0: C0410: Multiple imports on one line (sys, os, inspect, pathlib) (multiple-imports)
util.py:33:4: W0602: Using global for 'LOG_FILE' but no assignment is done (global-variable-not-assigned)
util.py:33:45: W0602: Using global for 'CSV_FILE' but no assignment is done (global-variable-not-assigned)
util.py:33:86: W0602: Using global for 'OIDS' but no assignment is done (global-variable-not-assigned)
util.py:53:24: R1721: Unnecessary use of a comprehension, use list(range(21)) instead. (unnecessary-comprehension)
util.py:76:24: R1721: Unnecessary use of a comprehension, use list(range(21)) instead. (unnecessary-comprehension)
util.py:99:25: R1721: Unnecessary use of a comprehension, use list(range(p, q)) instead. (unnecessary-comprehension)
util.py:100:25: R1721: Unnecessary use of a comprehension, use list(range(g, h)) instead. (unnecessary-comprehension)
util.py:130:4: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
util.py:157:113: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
util.py:211:0: R0903: Too few public methods (0/2) (too-few-public-methods)
util.py:215:0: R0903: Too few public methods (1/2) (too-few-public-methods)
util.py:222:0: R0903: Too few public methods (0/2) (too-few-public-methods)
util.py:305:0: R0903: Too few public methods (0/2) (too-few-public-methods)
util.py:411:4: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
util.py:431:17: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
util.py:452:4: W0603: Using the global statement (global-statement)
util.py:453:11: W0612: Unused variable 'sf' (unused-variable)
util.py:538:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
util.py:597:0: R0903: Too few public methods (1/2) (too-few-public-methods)
************* Module chord
chord.py:1:0: C0114: Missing module docstring (missing-module-docstring)
chord.py:7:0: C0414: Import alias does not rename original package (useless-import-alias)
chord.py:8:0: C0414: Import alias does not rename original package (useless-import-alias)
chord.py:9:0: C0414: Import alias does not rename original package (useless-import-alias)
chord.py:10:0: C0414: Import alias does not rename original package (useless-import-alias)
chord.py:16:0: R0902: Too many instance attributes (10/7) (too-many-instance-attributes)
chord.py:28:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
chord.py:30:12: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
chord.py:40:32: R1721: Unnecessary use of a comprehension, use list(_ikeys) instead. (unnecessary-comprehension)
chord.py:24:4: R0915: Too many statements (58/50) (too-many-statements)
chord.py:104:12: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
chord.py:178:26: R1721: Unnecessary use of a comprehension, use set(ivals) instead. (unnecessary-comprehension)
chord.py:212:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
chord.py:219:21: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
chord.py:246:87: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
chord.py:260:25: R1721: Unnecessary use of a comprehension, use set(range(len(ii))) instead. (unnecessary-comprehension)
chord.py:270:12: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
chord.py:224:4: R0915: Too many statements (77/50) (too-many-statements)
chord.py:898:44: R1721: Unnecessary use of a comprehension, use list(a) instead. (unnecessary-comprehension)
chord.py:922:17: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
chord.py:932:8: C0206: Consider iterating with .items() (consider-using-dict-items)
chord.py:932:17: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)

------------------------------------------------------------------
Your code has been rated at 9.39/10 (previous run: 3.20/10, +6.19)

