#  57 utl   init               argc=34 (argv)='[C:\\Users\\Owner\\Documents\\GitHub\\tabs\\tabs.py -i 1 1 1 6 -n 1 1 10 6 -M 0 -tdeo -p 6 -S 0 1 3 -f test -w 0 0 0 0 -T E A D G B E]'
#  58 utl   init               argv[1]=-i
#  58 utl   init               argv[2]=1
#  58 utl   init               argv[3]=1
#  58 utl   init               argv[4]=1
#  58 utl   init               argv[5]=6
#  58 utl   init               argv[6]=-n
#  58 utl   init               argv[7]=1
#  58 utl   init               argv[8]=1
#  58 utl   init               argv[9]=10
#  58 utl   init               argv[10]=6
#  58 utl   init               argv[11]=-M
#  58 utl   init               argv[12]=0
#  58 utl   init               argv[13]=-tdeo
#  58 utl   init               argv[14]=-p
#  58 utl   init               argv[15]=6
#  58 utl   init               argv[16]=-S
#  58 utl   init               argv[17]=0
#  58 utl   init               argv[18]=1
#  58 utl   init               argv[19]=3
#  58 utl   init               argv[20]=-f
#  58 utl   init               argv[21]=test
#  58 utl   init               argv[22]=-w
#  58 utl   init               argv[23]=0
#  58 utl   init               argv[24]=0
#  58 utl   init               argv[25]=0
#  58 utl   init               argv[26]=0
#  58 utl   init               argv[27]=-T
#  58 utl   init               argv[28]=E
#  58 utl   init               argv[29]=A
#  58 utl   init               argv[30]=D
#  58 utl   init               argv[31]=G
#  58 utl   init               argv[32]=B
#  58 utl   init               argv[33]=E
# 298 utl   parseCmdLine       argv=[-i 1 1 1 6 -n 1 1 10 6 -M 0 -tdeo -p 6 -S 0 1 3 -f test -w 0 0 0 0 -T E A D G B E]
# 298 utl   parseCmdLine       C:\Users\Owner\Documents\GitHub\tabs\tabs.py
# 314 utl   parseCmdLine        1 short   -i i [] 
 2 arg     1  i [1] 
 3 arg     1  i [1 1] 
 4 arg     1  i [1 1 1] 
 5 arg     6  i [1 1 1 6] 
# 314 utl   parseCmdLine        6 short   -n n [] 
 7 arg     1  n [1] 
 8 arg     1  n [1 1] 
 9 arg     10 n [1 1 10] 
10 arg     6  n [1 1 10 6] 
# 314 utl   parseCmdLine       11 short   -M M [] 
12 arg     0  M [0] 
13 short   -tdeo t [] 13 short   -tdeo d [] 13 short   -tdeo e [] 13 short   -tdeo o [] 
# 314 utl   parseCmdLine       14 short   -p p [] 
15 arg     6  p [6] 
# 314 utl   parseCmdLine       16 short   -S S [] 
17 arg     0  S [0] 
18 arg     1  S [0 1] 
19 arg     3  S [0 1 3] 
# 314 utl   parseCmdLine       20 short   -f f [] 
21 arg     test f [test] 
# 314 utl   parseCmdLine       22 short   -w w [] 
23 arg     0  w [0] 
24 arg     0  w [0 0] 
25 arg     0  w [0 0 0] 
26 arg     0  w [0 0 0 0] 
# 314 utl   parseCmdLine       27 short   -T T [] 
28 arg     E  T [E] 
29 arg     A  T [E A] 
30 arg     D  T [E A D] 
31 arg     G  T [E A D G] 
32 arg     B  T [E A D G B] 
33 arg     E  T [E A D G B E] 
# 334 utl   parseCmdLine       options=i:1 1 1 6 n:1 1 10 6 M:0 t: d: e: o: p:6 S:0 1 3 f:test w:0 0 0 0 T:E A D G B E 
#  60 utl   init                  ARGS=i:1 1 1 6 n:1 1 10 6 M:0 t: d: e: o: p:6 S:0 1 3 f:test w:0 0 0 0 T:E A D G B E 
#  61 utl   init               ROOT_DIR='test'
#  23 kysgs init               BGN
KS Type N  I  Key Sigature Ordered   F/S/N Indices   Ionian Note I   Ionian Note Ordering  Key Sig Table -7
t=-1 i=0 j=6 s=-7 (iz2)='[11 4 9 2 7 0 5]' (ms2)='[B E A D G C F]'
 0 NTRL C  0 [B  E  A  D  G  C  F ] [b 4 9 2 7 0 5] [0 2 4 5 7 9 b] [C  D  E  F  G  A  B ]
-1 FLAT F  5 [B♭ E  A  D  G  C  F ] [a 4 9 2 7 0 5] [5 7 9 a 0 2 4] [F  G  A  B♭ C  D  E ]
-2 FLAT B♭ a [B♭ E♭ A  D  G  C  F ] [a 3 9 2 7 0 5] [a 0 2 3 5 7 9] [B♭ C  D  E♭ F  G  A ]
-3 FLAT E♭ 3 [B♭ E♭ A♭ D  G  C  F ] [a 3 8 2 7 0 5] [3 5 7 8 a 0 2] [E♭ F  G  A♭ B♭ C  D ]
-4 FLAT A♭ 8 [B♭ E♭ A♭ D♭ G  C  F ] [a 3 8 1 7 0 5] [8 a 0 1 3 5 7] [A♭ B♭ C  D♭ E♭ F  G ]
-5 FLAT D♭ 1 [B♭ E♭ A♭ D♭ G♭ C  F ] [a 3 8 1 6 0 5] [1 3 5 6 8 a 0] [D♭ E♭ F  G♭ A♭ B♭ C ]
-6 FLAT G♭ 6 [B♭ E♭ A♭ D♭ G♭ C♭ F ] [a 3 8 1 6 b 5] [6 8 a b 1 3 5] [G♭ A♭ B♭ C♭ D♭ E♭ F ]
-7 FLAT C♭ b [B♭ E♭ A♭ D♭ G♭ C♭ F♭] [a 3 8 1 6 b 4] [b 1 3 4 6 8 a] [C♭ D♭ E♭ F♭ G♭ A♭ B♭]
t=1 i=0 j=10 s=7 (iz2)='[5 0 7 2 9 4 11]' (ms2)='[F C G D A E B]'
 0 NTRL C  0 [F  C  G  D  A  E  B ] [5 0 7 2 9 4 b] [0 2 4 5 7 9 b] [C  D  E  F  G  A  B ]
+1 SHRP G  7 [F♯ C  G  D  A  E  B ] [6 0 7 2 9 4 b] [7 9 b 0 2 4 6] [G  A  B  C  D  E  F♯]
+2 SHRP D  2 [F♯ C♯ G  D  A  E  B ] [6 1 7 2 9 4 b] [2 4 6 7 9 b 1] [D  E  F♯ G  A  B  C♯]
+3 SHRP A  9 [F♯ C♯ G♯ D  A  E  B ] [6 1 8 2 9 4 b] [9 b 1 2 4 6 8] [A  B  C♯ D  E  F♯ G♯]
+4 SHRP E  4 [F♯ C♯ G♯ D♯ A  E  B ] [6 1 8 3 9 4 b] [4 6 8 9 b 1 3] [E  F♯ G♯ A  B  C♯ D♯]
+5 SHRP B  b [F♯ C♯ G♯ D♯ A♯ E  B ] [6 1 8 3 a 4 b] [b 1 3 4 6 8 a] [B  C♯ D♯ E  F♯ G♯ A♯]
+6 SHRP F♯ 6 [F♯ C♯ G♯ D♯ A♯ E♯ B ] [6 1 8 3 a 5 b] [6 8 a b 1 3 5] [F♯ G♯ A♯ B  C♯ D♯ E♯]
+7 SHRP C♯ 1 [F♯ C♯ G♯ D♯ A♯ E♯ B♯] [6 1 8 3 a 5 0] [1 3 5 6 8 a 0] [C♯ D♯ E♯ F♯ G♯ A♯ B♯]
KS Type N  I  Key Sigature Ordered   F/S/N Indices   Ionian Note I   Ionian Note Ordering  Key Sig Table +7
#  58 kysgs dumpData           BGN csv=0
 F  l  a  t  s        N        S  h  r  p  s
 -  -  -  -  -  -  -     +  +  +  +  +  +  +
[7  6  5  4  3  2  1  0  1  2  3  4  5  6  7 ]
[b  6  1  8  3  a  5  0  7  2  9  4  b  6  1 ]
[C♭ G♭ D♭ A♭ E♭ B♭ F  C  G  D  A  E  B  F♯ C♯]
[F♭ C♭ G♭ D♭ A♭ E♭ B♭    F♯ C♯ G♯ D♯ A♯ E♯ B♯]
[4  b  6  1  8  3  a     6  1  8  3  a  5  0 ]
#  65 kysgs dumpKSV            BGN csv=0
KS Type N  I  Key Sigature Ordered   F/S/N Indices   Ionian Note I   Ionian Note Ordering  Key Sig Table +15
-7 FLAT C♭ b [B♭ E♭ A♭ D♭ G♭ C♭ F♭] [a 3 8 1 6 b 4] [b 1 3 4 6 8 a] [C♭ D♭ E♭ F♭ G♭ A♭ B♭]
-6 FLAT G♭ 6 [B♭ E♭ A♭ D♭ G♭ C♭ F ] [a 3 8 1 6 b 5] [6 8 a b 1 3 5] [G♭ A♭ B♭ C♭ D♭ E♭ F ]
-5 FLAT D♭ 1 [B♭ E♭ A♭ D♭ G♭ C  F ] [a 3 8 1 6 0 5] [1 3 5 6 8 a 0] [D♭ E♭ F  G♭ A♭ B♭ C ]
-4 FLAT A♭ 8 [B♭ E♭ A♭ D♭ G  C  F ] [a 3 8 1 7 0 5] [8 a 0 1 3 5 7] [A♭ B♭ C  D♭ E♭ F  G ]
-3 FLAT E♭ 3 [B♭ E♭ A♭ D  G  C  F ] [a 3 8 2 7 0 5] [3 5 7 8 a 0 2] [E♭ F  G  A♭ B♭ C  D ]
-2 FLAT B♭ a [B♭ E♭ A  D  G  C  F ] [a 3 9 2 7 0 5] [a 0 2 3 5 7 9] [B♭ C  D  E♭ F  G  A ]
-1 FLAT F  5 [B♭ E  A  D  G  C  F ] [a 4 9 2 7 0 5] [5 7 9 a 0 2 4] [F  G  A  B♭ C  D  E ]
 0 NTRL C  0 [F  C  G  D  A  E  B ] [5 0 7 2 9 4 b] [0 2 4 5 7 9 b] [C  D  E  F  G  A  B ]
+1 SHRP G  7 [F♯ C  G  D  A  E  B ] [6 0 7 2 9 4 b] [7 9 b 0 2 4 6] [G  A  B  C  D  E  F♯]
+2 SHRP D  2 [F♯ C♯ G  D  A  E  B ] [6 1 7 2 9 4 b] [2 4 6 7 9 b 1] [D  E  F♯ G  A  B  C♯]
+3 SHRP A  9 [F♯ C♯ G♯ D  A  E  B ] [6 1 8 2 9 4 b] [9 b 1 2 4 6 8] [A  B  C♯ D  E  F♯ G♯]
+4 SHRP E  4 [F♯ C♯ G♯ D♯ A  E  B ] [6 1 8 3 9 4 b] [4 6 8 9 b 1 3] [E  F♯ G♯ A  B  C♯ D♯]
+5 SHRP B  b [F♯ C♯ G♯ D♯ A♯ E  B ] [6 1 8 3 a 4 b] [b 1 3 4 6 8 a] [B  C♯ D♯ E  F♯ G♯ A♯]
+6 SHRP F♯ 6 [F♯ C♯ G♯ D♯ A♯ E♯ B ] [6 1 8 3 a 5 b] [6 8 a b 1 3 5] [F♯ G♯ A♯ B  C♯ D♯ E♯]
+7 SHRP C♯ 1 [F♯ C♯ G♯ D♯ A♯ E♯ B♯] [6 1 8 3 a 5 0] [1 3 5 6 8 a 0] [C♯ D♯ E♯ F♯ G♯ A♯ B♯]
KS Type N  I  Key Sigature Ordered   F/S/N Indices   Ionian Note I   Ionian Note Ordering  Key Sig Table +15
#  70 kysgs dumpKSV            END csv=0
#  61 kysgs dumpData           END csv=0
#  58 kysgs dumpData           BGN csv=1
#  65 kysgs dumpKSV            BGN csv=1
#  70 kysgs dumpKSV            END csv=1
#  61 kysgs dumpData           END csv=1
#  32 kysgs init               END
BGN C:\Users\Owner\Documents\GitHub\tabs\tabs.py
#2180 tabs  <module>           argv=[-i 1 1 1 6 -n 1 1 10 6 -M 0 -tdeo -p 6 -S 0 1 3 -f test -w 0 0 0 0 -T E A D G B E]
RGB        0   1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  16  17   Diff Span
FSH:   O=[  0  15  30  45  60  75  90 105 120 135 150 165 170 195 210 225 240 255] 255.0 15.0
       R=[  8  23  37  52  66  81  95 110 124 139 153 168 182 197 211 226 240 255] 247.0 14.5
       G=[  1   3   5   6   8  10  12  13  15  17  19  20  22  24  26  27  29  31]  30.0  1.8
       B=[  8  23  37  52  66  81  95 110 124 139 153 168 182 197 211 226 240 255] 247.0 14.5
PNK:   O=[  0  15  30  45  60  75  90 105 120 135 150 165 170 195 210 225 240 255] 255.0 15.0
       R=[  8  23  37  52  66  81  95 110 124 139 153 168 182 197 211 226 240 255] 247.0 14.5
       G=[  4  11  19  26  33  40  48  55  62  70  77  84  92  99 106 113 121 128] 124.0  7.3
       B=[  6  17  28  39  50  61  72  83  94 104 115 126 137 148 159 170 181 192] 186.0 10.9
RED:   O=[  0  15  30  45  60  75  90 105 120 135 150 165 170 195 210 225 240 255] 255.0 15.0
       R=[  8  23  37  52  66  81  95 110 124 139 153 168 182 197 211 226 240 255] 247.0 14.5
       G=[  2   6   9  13  16  20  24  27  31  34  38  41  45  49  52  56  59  63]  61.0  3.6
       B=[  2   6   9  13  16  20  24  27  31  34  38  41  45  49  52  56  59  63]  61.0  3.6
RST:   O=[  0  15  30  45  60  75  90 105 120 135 150 165 170 195 210 225 240 255] 255.0 15.0
       R=[  8  23  37  52  66  81  95 110 124 139 153 168 182 197 211 226 240 255] 247.0 14.5
       G=[  3   8  14  19  25  30  36  41  47  52  58  63  69  74  80  85  91  96]  93.0  5.5
       B=[  0   1   1   2   3   3   4   4   5   5   6   7   7   8   8   9   9  10]  10.0  0.6
ORG:   O=[  0  15  30  45  60  75  90 105 120 135 150 165 170 195 210 225 240 255] 255.0 15.0
       R=[  8  23  37  52  66  81  95 110 124 139 153 168 182 197 211 226 240 255] 247.0 14.5
       G=[  6  16  26  36  46  56  66  76  86  96 106 116 126 136 146 156 166 176] 170.0 10.0
       B=[  1   3   5   6   8  10  12  13  15  17  19  20  22  24  26  27  29  31]  30.0  1.8
PCH:   O=[  0  15  30  45  60  75  90 105 120 135 150 165 170 195 210 225 240 255] 255.0 15.0
       R=[  8  23  37  52  66  81  95 110 124 139 153 168 182 197 211 226 240 255] 247.0 14.5
       G=[  5  14  23  32  41  51  60  69  78  87  96 105 114 124 133 142 151 160] 155.0  9.1
       B=[  4  11  19  26  33  40  48  55  62  70  77  84  92  99 106 113 121 128] 124.0  7.3
YLW:   O=[  0  15  30  45  60  75  90 105 120 135 150 165 170 195 210 225 240 255] 255.0 15.0
       R=[  8  23  37  52  66  81  95 110 124 139 153 168 182 197 211 226 240 255] 247.0 14.5
       G=[  8  23  37  52  66  81  95 110 124 139 153 168 182 197 211 226 240 255] 247.0 14.5
       B=[  2   6   9  13  16  20  24  27  31  34  38  41  45  49  52  56  59  63]  61.0  3.6
LIM:   O=[  0  15  30  45  60  75  90 105 120 135 150 165 170 195 210 225 240 255] 255.0 15.0
       R=[  5  14  23  32  41  51  60  69  78  87  96 105 114 124 133 142 151 160] 155.0  9.1
       G=[  8  23  37  52  66  81  95 110 124 139 153 168 182 197 211 226 240 255] 247.0 14.5
       B=[  1   3   5   6   8  10  12  13  15  17  19  20  22  24  26  27  29  31]  30.0  1.8
GRN:   O=[  0  15  30  45  60  75  90 105 120 135 150 165 170 195 210 225 240 255] 255.0 15.0
       R=[  2   6   9  13  16  20  24  27  31  34  38  41  45  49  52  56  59  63]  61.0  3.6
       G=[  8  23  37  52  66  81  95 110 124 139 153 168 182 197 211 226 240 255] 247.0 14.5
       B=[  2   6   9  13  16  20  24  27  31  34  38  41  45  49  52  56  59  63]  61.0  3.6
TRQ:   O=[  0  15  30  45  60  75  90 105 120 135 150 165 170 195 210 225 240 255] 255.0 15.0
       R=[  1   3   5   6   8  10  12  13  15  17  19  20  22  24  26  27  29  31]  30.0  1.8
       G=[  8  23  37  52  66  81  95 110 124 139 153 168 182 197 211 226 240 255] 247.0 14.5
       B=[  6  17  28  39  50  61  72  83  94 104 115 126 137 148 159 170 181 192] 186.0 10.9
CYA:   O=[  0  15  30  45  60  75  90 105 120 135 150 165 170 195 210 225 240 255] 255.0 15.0
       R=[  1   3   5   6   8  10  12  13  15  17  19  20  22  24  26  27  29  31]  30.0  1.8
       G=[  8  23  37  52  66  81  95 110 124 139 153 168 182 197 211 226 240 255] 247.0 14.5
       B=[  8  23  37  52  66  81  95 110 124 139 153 168 182 197 211 226 240 255] 247.0 14.5
IND:   O=[  0  15  30  45  60  75  90 105 120 135 150 165 170 195 210 225 240 255] 255.0 15.0
       R=[  1   3   5   6   8  10  12  13  15  17  19  20  22  24  26  27  29  31]  30.0  1.8
       G=[  6  16  26  36  47  57  67  77  88  98 108 118 129 139 149 159 170 180] 174.0 10.2
       B=[  8  23  37  52  66  81  95 110 124 139 153 168 182 197 211 226 240 255] 247.0 14.5
BLU:   O=[  0  15  30  45  60  75  90 105 120 135 150 165 170 195 210 225 240 255] 255.0 15.0
       R=[  2   6   9  13  16  20  24  27  31  34  38  41  45  49  52  56  59  63]  61.0  3.6
       G=[  2   6   9  13  16  20  24  27  31  34  38  41  45  49  52  56  59  63]  61.0  3.6
       B=[  8  23  37  52  66  81  95 110 124 139 153 168 182 197 211 226 240 255] 247.0 14.5
VLT:   O=[  0  15  30  45  60  75  90 105 120 135 150 165 170 195 210 225 240 255] 255.0 15.0
       R=[  4  11  19  26  33  40  48  55  62  70  77  84  92  99 106 113 121 128] 124.0  7.3
       G=[  2   6   9  13  16  20  24  27  31  34  38  41  45  49  52  56  59  63]  61.0  3.6
       B=[  8  23  37  52  66  81  95 110 124 139 153 168 182 197 211 226 240 255] 247.0 14.5
GRY:   O=[  0  15  30  45  60  75  90 105 120 135 150 165 170 195 210 225 240 255] 255.0 15.0
       R=[  8  23  37  52  66  81  95 110 124 139 153 168 182 197 211 226 240 255] 247.0 14.5
       G=[  8  23  37  52  66  81  95 110 124 139 153 168 182 197 211 226 240 255] 247.0 14.5
       B=[  8  23  37  52  66  81  95 110 124 139 153 168 182 197 211 226 240 255] 247.0 14.5
CL1:   O=[  0  15  30  45  60  75  90 105 120 135 150 165 170 195 210 225 240 255] 255.0 15.0
       R=[  4  11  18  26  33  40  47  55  62  69  76  84  91  98 105 113 120 127] 123.0  7.2
       G=[  1   3   5   6   8  10  12  13  15  17  19  20  22  24  26  27  29  31]  30.0  1.8
       B=[  8  23  37  52  66  81  95 110 124 139 153 168 182 197 211 226 240 255] 247.0 14.5
CL2:   O=[  0  15  30  45  60  75  90 105 120 135 150 165 170 195 210 225 240 255] 255.0 15.0
       R=[  8  23  37  52  66  81  95 110 124 139 153 168 182 197 211 226 240 255] 247.0 14.5
       G=[  8  23  37  52  66  81  95 110 124 139 153 168 182 197 211 226 240 255] 247.0 14.5
       B=[  2   6   9  13  16  20  24  27  31  34  38  41  45  49  52  56  59  63]  61.0  3.6
CL3:   O=[  0  15  30  45  60  75  90 105 120 135 150 165 170 195 210 225 240 255] 255.0 15.0
       R=[  8  23  37  52  66  81  95 110 124 139 153 168 182 197 211 226 240 255] 247.0 14.5
       G=[  2   6   9  13  16  20  24  27  31  34  38  41  45  49  52  56  59  63]  61.0  3.6
       B=[  7  18  30  42  54  66  78  89 101 113 125 137 149 161 172 184 196 208] 201.0 11.8
CL4:   O=[  0  15  30  45  60  75  90 105 120 135 150 165 170 195 210 225 240 255] 255.0 15.0
       R=[  1   3   5   6   8  10  12  13  15  17  19  20  22  24  26  27  29  31]  30.0  1.8
       G=[  4  11  18  26  33  40  47  55  62  69  76  84  91  98 105 113 120 127] 123.0  7.2
       B=[  2   6   9  13  16  20  24  27  31  34  38  41  45  49  52  56  59  63]  61.0  3.6
#2187 tabs  <module>           Constructing Tabs object
#2149 tabs  dumpGlobals        BASE_NAME = test
#2150 tabs  dumpGlobals        argv      = +34[C:\Users\Owner\Documents\GitHub\tabs\tabs.py -i 1 1 1 6 -n 1 1 10 6 -M 0 -tdeo -p 6 -S 0 1 3 -f test -w 0 0 0 0 -T E A D G B E]
#2151 tabs  dumpGlobals        PATH      = C:\Users\Owner\Documents\GitHub\tabs\tabs.py
#2152 tabs  dumpGlobals        BASE_PATH = C:\Users\Owner\Documents\GitHub\tabs\test
# 449 utl   getFilePath        baseName =test.79      path2str(basePath) = 'C:/Users/Owner/Documents/GitHub/tabs/test'
# 450 utl   getFilePath        baseName =test.79      basePath = WindowsPath('C:/Users/Owner/Documents/GitHub/tabs/test')
# 453 utl   getFilePath        fileName =test.79.cat  path2str(filePath) = 'C:/Users/Owner/Documents/GitHub/tabs/test/cats/test.79.cat'
# 454 utl   getFilePath        fileName =test.79.cat  filePath = WindowsPath('C:/Users/Owner/Documents/GitHub/tabs/test/cats/test.79.cat')
# 449 utl   getFilePath        baseName =test.79      path2str(basePath) = 'C:/Users/Owner/Documents/GitHub/tabs/test'
# 450 utl   getFilePath        baseName =test.79      basePath = WindowsPath('C:/Users/Owner/Documents/GitHub/tabs/test')
# 453 utl   getFilePath        fileName =test.79.csv  path2str(filePath) = 'C:/Users/Owner/Documents/GitHub/tabs/test/csvs/test.79.csv'
# 454 utl   getFilePath        fileName =test.79.csv  filePath = WindowsPath('C:/Users/Owner/Documents/GitHub/tabs/test/csvs/test.79.csv')
# 449 utl   getFilePath        baseName =test.79      path2str(basePath) = 'C:/Users/Owner/Documents/GitHub/tabs/test'
# 450 utl   getFilePath        baseName =test.79      basePath = WindowsPath('C:/Users/Owner/Documents/GitHub/tabs/test')
# 453 utl   getFilePath        fileName =test.79.log  path2str(filePath) = 'C:/Users/Owner/Documents/GitHub/tabs/test/logs/test.79.log'
# 454 utl   getFilePath        fileName =test.79.log  filePath = WindowsPath('C:/Users/Owner/Documents/GitHub/tabs/test/logs/test.79.log')
# 449 utl   getFilePath        baseName =test.79      path2str(basePath) = 'C:/Users/Owner/Documents/GitHub/tabs/test'
# 450 utl   getFilePath        baseName =test.79      basePath = WindowsPath('C:/Users/Owner/Documents/GitHub/tabs/test')
# 453 utl   getFilePath        fileName =test.79.txt  path2str(filePath) = 'C:/Users/Owner/Documents/GitHub/tabs/test/text/test.79.txt'
# 454 utl   getFilePath        fileName =test.79.txt  filePath = WindowsPath('C:/Users/Owner/Documents/GitHub/tabs/test/text/test.79.txt')
# 264 tabs  dumpArgs           [a]      .AUTO_SAVE=0
# 265 tabs  dumpArgs           [A]         .VARROW=1
# 266 tabs  dumpArgs           [b]        .FRT_BRD=0
# 267 tabs  dumpArgs           [B]            .BGC=0
# 268 tabs  dumpArgs           [c]            .CAT=0
# 269 tabs  dumpArgs           [C]      .CHECKERED=0
# 270 tabs  dumpArgs           [d]       .DEC_DATA=1
# 271 tabs  dumpArgs           [D]       .DBG_TABT=0
# 272 tabs  dumpArgs           [e]      .EVENT_LOG=1
# 273 tabs  dumpArgs           [f]      .FILE_NAME='test'
# 274 tabs  dumpArgs           [F]      .FULL_SCRN=0
# 275 tabs  dumpArgs           [g]        .ORD_GRP=1
# 276 tabs  dumpArgs           [G]       .GEN_DATA=0
# 277 tabs  dumpArgs           [i]              .i=[1 1 1 1 6]
# 278 tabs  dumpArgs           [J]      .DSP_J_LEV=4
# 279 tabs  dumpArgs           [l]       .LONG_TXT=1
# 280 tabs  dumpArgs           [L]             .LL=0
# 281 tabs  dumpArgs           [M]      .MULTILINE=0
# 282 tabs  dumpArgs           [n]              .n=[1 1 3 10 6]
# 283 tabs  dumpArgs           [o]           .OIDS=1
# 284 tabs  dumpArgs           [p]          .SNAPS=6
# 285 tabs  dumpArgs           [r]       .ROOT_DIR='test'
# 286 tabs  dumpArgs           [R]         .RESIZE=1
# 287 tabs  dumpArgs           [s]        .SPRITES=0
# 288 tabs  dumpArgs           [S]             .SS=[0 1 3]
# 289 tabs  dumpArgs           [t]           .TEST=1
# 290 tabs  dumpArgs           [T]         .TUNING=[E A D G B E]
# 291 tabs  dumpArgs           [u]         .SUBPIX=1
# 292 tabs  dumpArgs           [v]          .VERBY=0
# 293 tabs  dumpArgs           [V]           .VIEW=[]
# 294 tabs  dumpArgs           [w]           .AXYV=[0 0 0 0]
# 295 tabs  dumpArgs           [x]           .EXIT=0
# 296 tabs  dumpArgs           [Z]             .ZZ=[]
initk((Tabs, 0, 'VLT', 5, 7, 'VLT', 17, 17) {})=[(40, 20, 81, 105), (128, 63, 255, 255)]
initk((Tabs, 1, 'FSH', 5, 5, 'FSH', 17, 11) {})=[(81, 10, 81, 75), (255, 31, 255, 165)]
initk((Tabs, 2, 'RED', 5, 5, 'RED', 17, 11) {})=[(81, 20, 20, 75), (255, 63, 63, 165)]
initk((Tabs, 3, 'PNK', 5, 5, 'PNK', 17, 11) {})=[(81, 40, 61, 75), (255, 128, 192, 165)]
initk((Tabs, 4, 'ORG', 5, 17, 'ORG', 17, 17) {})=[(81, 56, 10, 255), (255, 176, 31, 255)]
initk((Tabs, 5, 'GRN', 5, 17, 'GRN', 17, 17) {})=[(20, 81, 20, 255), (63, 255, 63, 255)]
initk((Tabs, 6, 'YLW', 5, 17, 'YLW', 17, 17) {})=[(81, 81, 20, 255), (255, 255, 63, 255)]
initk((Tabs, 7, 'CYA', 5, 17, 'CYA', 17, 17) {})=[(10, 81, 81, 255), (31, 255, 255, 255)]
initk((Tabs, 8, 'PCH', 5, 17, 'PCH', 17, 17) {})=[(81, 51, 40, 255), (255, 160, 128, 255)]
initk((Tabs, 9, 'BLU', 5, 17, 'BLU', 17, 17) {})=[(20, 20, 81, 255), (63, 63, 255, 255)]
initk((Tabs, 10, 'IND', 5, 17, 'IND', 17, 17) {})=[(10, 57, 81, 255), (31, 180, 255, 255)]
initk((Tabs, 11, 'TRQ', 17, 9, 'TRQ', 5, 9) {})=[(31, 255, 192, 135), (10, 81, 61, 135)]
initk((Tabs, 12, 'CL2', 5, 17, 'CL2', 17, 17) {})=[(81, 81, 20, 255), (255, 255, 63, 255)]
initk((Tabs, 13, 'CL3', 5, 17, 'CL3', 17, 17) {})=[(81, 20, 66, 255), (255, 63, 208, 255)]
initk((Tabs, 14, 'CL1', 5, 17, 'CL1', 17, 17) {})=[(40, 10, 81, 255), (127, 31, 255, 255)]
initk((Tabs, 15, 'GRY', 5, 17, 'GRY', 17, 17) {})=[(81, 81, 81, 255), (255, 255, 255, 255)]
# 874 tabs  readDataFile       BGN n=[1 1 3 10 6]
# 881 tabs  readDataFile       C:\Users\Owner\Documents\GitHub\tabs\test\Dtest.1.1._.10.6.dat 108 bytes = 0.1 KB
# 882 tabs  readDataFile       Raw Data File BGN:
##########
          
          
          
0         
1         
3         
##########
##########
# 897 tabs  readDataFile       Raw Data File END:
# 898 tabs  readDataFile       .fmtdl()='[1 1 6 10]' .fmtdt()="['list' 'list' 'list' 'str']"
# 899 tabs  readDataFile       sp=1 sl=1 sr=6 st=60
# 911 tabs  checkDataFile      ref=108 p=1 l=1 r=6 c=10 w=2 x=2 y=2 z=1
# 912 tabs  checkDataFile      c0= 12 = c + y = 10 + 2
# 913 tabs  checkDataFile      dl= 72 = p * l * r * (c+y) = 1 * 1 * 6 * (1*10+2)
# 914 tabs  checkDataFile      cl= 24 = w *       (z*c+y) = 2 * ((1 * 10) + 2)
# 915 tabs  checkDataFile      sz=108 = c0 + dl + cl      = 12 + 72 + 24
# 916 tabs  checkDataFile      ref=108
# 902 tabs  readDataFile       1 ( 1.000) pages = 1 lines =          6 rows =          60 cols
# 903 tabs  readDataFile       1 ( 1.000) pages @ 1 lines per page, @ 6 rows per line, @ 10 cols per row
# 906 tabs  readDataFile       END n=[1 1 3 10 6]
# 458 utl   copyFile           path2str(src)='C:/Users/Owner/Documents/GitHub/tabs/test/Dtest.1.1._.10.6.dat'
# 459 utl   copyFile           path2str(trg)='C:/Users/Owner/Documents/GitHub/tabs/test/data/Dtest.1.1._.10.6.dat'
# 460 utl   copyFile           src=WindowsPath('C:/Users/Owner/Documents/GitHub/tabs/test/Dtest.1.1._.10.6.dat')
# 461 utl   copyFile           trg=WindowsPath('C:/Users/Owner/Documents/GitHub/tabs/test/data/Dtest.1.1._.10.6.dat')
# 464 utl   copyFile                       copy C:\Users\Owner\Documents\GitHub\tabs\test\Dtest.1.1._.10.6.dat C:\Users\Owner\Documents\GitHub\tabs\test\data\Dtest.1.1._.10.6.dat ###
# 465 utl   copyFile           TRY ret = os.system(copy C:\Users\Owner\Documents\GitHub\tabs\test\Dtest.1.1._.10.6.dat C:\Users\Owner\Documents\GitHub\tabs\test\data\Dtest.1.1._.10.6.dat)
# 471 utl   copyFile           OK ret=0
# 473 utl   copyFile           FINALLY ret=0
# 474 utl   copyFile           os.system ret=0
# 458 utl   copyFile           path2str(src)='C:/Users/Owner/Documents/GitHub/tabs/test/Dtest.1.1._.10.6.dat'
# 459 utl   copyFile           path2str(trg)='C:/Users/Owner/Documents/GitHub/tabs/test/data/test.dat'
# 460 utl   copyFile           src=WindowsPath('C:/Users/Owner/Documents/GitHub/tabs/test/Dtest.1.1._.10.6.dat')
# 461 utl   copyFile           trg=WindowsPath('C:/Users/Owner/Documents/GitHub/tabs/test/data/test.dat')
# 464 utl   copyFile                       copy C:\Users\Owner\Documents\GitHub\tabs\test\Dtest.1.1._.10.6.dat C:\Users\Owner\Documents\GitHub\tabs\test\data\test.dat ###
# 465 utl   copyFile           TRY ret = os.system(copy C:\Users\Owner\Documents\GitHub\tabs\test\Dtest.1.1._.10.6.dat C:\Users\Owner\Documents\GitHub\tabs\test\data\test.dat)
# 471 utl   copyFile           OK ret=0
# 473 utl   copyFile           FINALLY ret=0
# 474 utl   copyFile           os.system ret=0
j=4 Tabl (960.00 540.00) (10 18) ( 96.00  30.00)  30.00 fs= 23.33
#1808 tabs  _initFonts         w=96.000=.viewW= 960.0/(10)                 PNT_PER_PIX=0.7778 fs=w*PNT_PER_PIX= 23.33pt
#1809 tabs  _initFonts         h=30.000=.viewH= 540.0/(nl=1 * ns=3 * nt=6) PNT_PER_PIX=0.7778 fs=h*PNT_PER_PIX= 23.33pt
#1821 tabs  dumpFont           4:96dpi  23.33pt 0:Lucida Console 0:  23.33pt = 0.7778(pt/pix) *  30.00pixels 
#1395 tabs  g_newUpdTniks      j==P: i=0 v=1 .j()[P]=0 .i[P]=1
#1781 tabs  setCaption         test/data/test.dat page 1
Name  Tid V PrtTxt x y AnchX AnchY CntWd CntHt Ascnt Dscnt As+Ds a v FnSz Lead LnSp TablText  ForegroundColor   BackgroundColor  B I S M W w FontName              FullText
#1703 tabs  plct2cc                   5 [180 180 180 60 6] [0 0    0 5] (   0 +  0 + 60 +  0 +5)
#1706 tabs  cursorCol          cc=  5 [0 0 0 5]
#1682 tabs  cc2xywh            tpp=180 old=5 lenT=60 cc=5 old % lenT
#1685 tabs  cc2xywh            cc=   5 old=   5 [180 180 180 60 6]   48.00  375.00   96.00   30.00 t.text='3' 18.68 32.00 C C
[2:D :1, a:B♭:1, 7:G :1]
[2:D :1, a:A♯:1, 7:G :1]
[a:B♭:1,  None ,  None ,  None ,  None ,  None ,  None ]
[ None ,  None ,  None ,  None , a:B♭:1,  None ,  None ]
#1821 tabs  dumpFont           4:96dpi  23.33pt 0:Lucida Console 0:  23.33pt = 0.7778(pt/pix) *  30.00pixels New1
# 485 tabs  _initTniks          0 NTRL C  0 [F  C  G  D  A  E  B ] [5 0 7 2 9 4 b] [0 2 4 5 7 9 b] [C  D  E  F  G  A  B ]
i=1 1 1 6 n=1 1 10 6 M=0 t= d= e= o= p=6 S=0 1 3 f=test w=0 0 0 0 T=E A D G B E Tetractys: .bot=24 .top=10000 a, b, c =  d, e =  d2, e2 =
[    0     1     2     3     4     5     6     7     8     9    10    11    12    13    14    15    16    17    18    19]
[[    0][    0     1][    0     1     2][    0     1     2     3][    0     1     2     3     4][    0     1     2     3     4     5][    0     1     2     3     4     5     6][    0     1     2     3     4     5     6     7][    0     1     2     3     4     5     6     7     8][    0     1     2     3     4     5     6     7     8     9][    0     1     2     3     4     5     6     7     8     9    10][    0     1     2     3     4     5     6     7     8     9    10    11][    0     1     2     3     4     5     6     7     8     9    10    11    12][    0     1     2     3     4     5     6     7     8     9    10    11    12    13][    0     1     2     3     4     5     6     7     8     9    10    11    12    13    14][    0     1     2     3     4     5     6     7     8     9    10    11    12    13    14    15][    0     1     2     3     4     5     6     7     8     9    10    11    12    13    14    15    16][    0     1     2     3     4     5     6     7     8     9    10    11    12    13    14    15    16    17][    0     1     2     3     4     5     6     7     8     9    10    11    12    13    14    15    16    17    18][    0     1     2     3     4     5     6     7     8     9    10    11    12    13    14    15    16    17    18    19]]
[[    1][    2     3][    4     6     9][    8    12    18    27][   16    24    36    54    81][   32    48    72   108   162   243][   64    96   144   216   324   486   729][  128   192   288   432   648   972  1458  2187][  256   384   576   864  1296  1944  2916  4374  6561][  512   768  1152  1728  2592  3888  5832  8748 13122 19683][ 1024  1536  2304  3456  5184  7776 11664 17496 26244 39366 59049][ 2048  3072  4608  6912 10368 15552 23328 34992 52488 78732 118098 177147][ 4096  6144  9216 13824 20736 31104 46656 69984 104976 157464 236196 354294 531441][ 8192 12288 18432 27648 41472 62208 93312 139968 209952 314928 472392 708588 1062882 1594323][16384 24576 36864 55296 82944 124416 186624 279936 419904 629856 944784 1417176 2125764 3188646 4782969][32768 49152 73728 110592 165888 248832 373248 559872 839808 1259712 1889568 2834352 4251528 6377292 9565938 14348907][65536 98304 147456 221184 331776 497664 746496 1119744 1679616 2519424 3779136 5668704 8503056 12754584 19131876 28697814 43046721][131072 196608 294912 442368 663552 995328 1492992 2239488 3359232 5038848 7558272 11337408 17006112 25509168 38263752 57395628 86093442 129140163][262144 393216 589824 884736 1327104 1990656 2985984 4478976 6718464 10077696 15116544 22674816 34012224 51018336 76527504 114791256 172186884 258280326 387420489][524288 786432 1179648 1769472 2654208 3981312 5971968 8957952 13436928 20155392 30233088 45349632 68024448 102036672 153055008 229582512 344373768 516560652 774840978 1162261467]]
